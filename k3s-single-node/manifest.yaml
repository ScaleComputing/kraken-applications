type: Application
version: "1.0.0"
metadata:
  name: "k3s-single-node-demo"
  labels:
    - k3s
    - single-node
    - pytest
spec:
  resources:
    - type: virdomain
      name: "k3s-controlplane-schedulable-demo"
      spec:
        description: Single-node k3s cluster
        cpu: 2
        memory: "4294967296"  # 4GB
        machine_type: "uefi"
        storage_devices:
          - name: disk1
            type: virtio_disk
            source: "ubuntu_k3s_base"
            boot: 1
            capacity: 10000000000  # 10GB
        network_devices:
          - name: eth0
            type: virtio
        tags:
          - pytest
          - k3s
          - single-node
        state: running
        cloud_init_data:
          user_data: |
            #cloud-config
            package_update: true
            package_upgrade: true
            packages:
              - curl
              - wget
              - apt-transport-https
              - ca-certificates
              - gnupg
              - lsb-release
              - qemu-guest-agent
              - open-iscsi
              - nfs-common
              - cloud-guest-utils
              - gdisk

            # --- Add these modules to resize the root partition/filesystem ---
            growpart:
              mode: auto   # Automatically detect device and partition containing root
              devices: ['/'] # Target the root filesystem's underlying partition
            resizefs:
              device: /    # Target the root filesystem for resizing
            # --- End of resize modules ---
            
            # Set root password
            chpasswd:
              list: |
                root:testpassword123
              expire: false
            
            # Create a user with password
            users:
              - name: admin
                primary_group: admin       
                plain_text_passwd: 'testpassword123'
                lock_passwd: false
                shell: /bin/bash
                sudo: ALL=(ALL) NOPASSWD:ALL
                ssh_import_id: ["gh:haljac"]
                groups: sudo, adm

            # Enable the qemu-guest-agent
            runcmd:
              # Start and enable qemu-guest-agent
              - systemctl enable qemu-guest-agent
              - systemctl start qemu-guest-agent
              - systemctl status qemu-guest-agent
              
              # Configure kernel parameters required for k3s
              - echo "net.ipv4.ip_forward = 1" > /etc/sysctl.d/90-k3s.conf
              - echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.d/90-k3s.conf
              - echo "net.bridge.bridge-nf-call-ip6tables = 1" >> /etc/sysctl.d/90-k3s.conf
              - sysctl -p /etc/sysctl.d/90-k3s.conf
              
              # Install k3s as a single-node cluster
              - curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644
              
              # Verify k3s is running
              - sleep 30  # Give k3s time to start
              - kubectl get nodes

            # Create a test deployment to verify k3s is working
            write_files:
              - path: /var/lib/rancher/k3s/server/manifests/test-deployment.yaml
                content: |
                  apiVersion: apps/v1
                  kind: Deployment
                  metadata:
                    name: nginx-test
                    namespace: default
                  spec:
                    replicas: 1
                    selector:
                      matchLabels:
                        app: nginx-test
                    template:
                      metadata:
                        labels:
                          app: nginx-test
                      spec:
                        containers:
                        - name: nginx
                          image: nginx:stable
                          ports:
                          - containerPort: 80
                  ---
                  apiVersion: v1
                  kind: Service
                  metadata:
                    name: nginx-test
                    namespace: default
                  spec:
                    selector:
                      app: nginx-test
                    ports:
                    - port: 80
                      targetPort: 80
                    type: ClusterIP

          meta_data: |
            instance-id: k3s-single-node-demo
            local-hostname: k3s-controlplane-schedulable-demo
  assets:
    - name: ubuntu_k3s_base
      type: virtual_disk
      format: raw
      url: "https://storage.googleapis.com/demo-bucket-lfm/focal-server-cloudimg-amd64.img" 
